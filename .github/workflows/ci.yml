name: CI

on:
  push:
    branches: [main]
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          submodules: recursive

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/llvm-21
          key: llvm-21.1.4-${{ runner.arch }}-${{ runner.os }}

      - name: Download and extract LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            LLVM_URL="https://github.com/llvm/llvm-project/releases/download/llvmorg-21.1.4/LLVM-21.1.4-Linux-X64.tar.xz"
            LLVM_FILE="LLVM-21.1.4-Linux-X64.tar.xz"
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            LLVM_URL="https://github.com/llvm/llvm-project/releases/download/llvmorg-21.1.4/LLVM-21.1.4-Linux-ARM64.tar.xz"
            LLVM_FILE="LLVM-21.1.4-Linux-ARM64.tar.xz"
          else
            echo "Unsupported architecture: $ARCH"
            exit 1
          fi
          
          echo "Downloading LLVM 21.1.4 for $ARCH..."
          wget --progress=dot:giga "$LLVM_URL"
          
          echo "Extracting LLVM..."
          mkdir -p ~/llvm-21
          tar -xf "$LLVM_FILE" -C ~/llvm-21 --strip-components=1
          rm "$LLVM_FILE"
          

      - name: Setup LLVM paths and verify
        run: |
          echo "$HOME/llvm-21/bin" >> $GITHUB_PATH
          
          # Make symlinks
          sudo ln -sf $HOME/llvm-21/bin/clang /usr/local/bin/clang
          sudo ln -sf $HOME/llvm-21/bin/clang++ /usr/local/bin/clang++
          sudo ln -sf $HOME/llvm-21/bin/lld /usr/local/bin/lld
          
          echo "LLVM version:"
          clang --version
          clang --print-targets | grep wasm

      - name: Install Binaryen
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y binaryen
          wasm-opt --version

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '22'

      - name: Install dependencies
        run: bun install

      - name: Build WASM decoder
        run: |
          cd packages/zstd-wasm-decoder/src
          LLVM_DIR=$HOME/llvm-21 make
        env:
          CC: clang

      - name: Run tests
        run: npm run test:all-runtimes

