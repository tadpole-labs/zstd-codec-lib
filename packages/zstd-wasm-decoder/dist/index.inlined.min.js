var t=4194304,i=t/8;class e{t;i;h;o;u;O;l;H;v;B;p;V;A=!1;N=0;m=0;constructor(t={}){this.O={dictionary:t.dictionary,maxSrcSize:t.maxSrcSize||0,maxDstSize:t.maxDstSize||0}}async init(t){const e=await WebAssembly.instantiate(t,{env:{}});if(this.t=e,this.i=e.exports,this.h=e.exports.memory,this.o=new Uint8Array(this.h.buffer),this.u=new DataView(this.h.buffer),this.O.dictionary){if(this.O.dictionary.length>i/4)throw Error("Dictionary exceeds 2MB maximum size");this.H=this.createDDict(this.O.dictionary)}return this.l=this.i._ZSTD_createDCtx(),this.p=this.R(16),this.V=this.R(16),this.F(!1),this}R(t){if(!this.i)throw Error("WASM module not initialized");return this.i.wasm_malloc(t)}F(e){const s=e?1:2;this.N=i*s,this.m=t/2*s,this.B=this.R(this.m),this.v=this.R(this.N),this.A=e}decompressSync(e,s){if(!this.i)throw Error("WASM module not initialized");const r=e.length;if(r>this.O.maxSrcSize)throw Error(`Compressed data (${r} bytes) exceeds maxSrcSize limit (${this.O.maxSrcSize} bytes)`);if(!s||s>t)return this.decompressStream(e,!0).buf;!this.A&&r>i&&this.F(!0),this.o.set(e,this.v);const n=this.i._ZSTD_decompress_usingDDict(this.l,this.B,this.m,this.v,r,this.H||0);if(this.S(n))throw Error(`Decompression failed (error code: ${n})`);return this.o.slice(this.B,this.B+n)}j(t,i,e){this.u.setUint32(t,i,!0),this.u.setUint32(t+4,e,!0),this.u.setUint32(t+8,0,!0)}S(t){if(!this.i)throw Error("WASM module not initialized");return 0!==this.i._ZSTD_isError(t)}decompressStream(t,i=!1){if(!this.i)throw Error("WASM module not initialized");if(i&&(this.i._ZSTD_DCtx_reset(this.l,1),this.H&&this.i._ZSTD_DCtx_refDDict(this.l,this.H)),!t||0===t.length)return{buf:new Uint8Array(0),code:0,input_offset:0};const e=[];let s=0,r=0;for(;s<t.length;){const i=Math.min(t.length-s,131075);for(this.o.set(t.subarray(s,s+i),this.v),this.j(this.p,this.v,i);this.T(this.p+8)<i;){this.j(this.V,this.B,131072);const t=this.i._ZSTD_decompressStream(this.l,this.V,this.p);if(this.S(t))throw Error(`Decompression error (error code: ${t})`);const i=this.T(this.V+8);if(i>0){if(r+=i,r>this.O.maxDstSize)throw Error(`Decompressed size (${r} bytes) exceeds maxDstSize limit (${this.O.maxDstSize} bytes)`);e.push(this.o.slice(this.B,this.B+i))}}s+=i}return{buf:e.length>0?"undefined"!=typeof Buffer?Buffer.concat(e):this.D(e):new Uint8Array(0),code:0,input_offset:t.length}}T(t){return this.u.getUint32(t,!0)}D(t){const i=new Uint8Array(t.reduce((t,i)=>t+i.length,0));let e=0;for(const s of t)i.set(s,e),e+=s.length;return i}freeDCtx(t){if(!this.i)throw Error("WASM module not initialized");return this.i._ZSTD_freeDCtx(t)}createDDict(t){const i=this.R(t.length);return this.o.set(t,i),this.i._ZSTD_createDDict(i,t.length)}freeDDict(t){if(!this.i)throw Error("WASM module not initialized");return this.i._ZSTD_freeDDict(t)}}var s,r=e,n="undefined"!=typeof globalThis&&globalThis.DecompressionStream;class h{readable;writable;constructor(t,i){if("zstd"!==t){if(n){const i=new n(t);return this.readable=i.readable,void(this.writable=i.writable)}throw new TypeError(`Unsupported format: ${t} (native DecompressionStream not available)`)}let e=null,s=!0;const{readable:r,writable:h}=new TransformStream({async start(){e=await i()},async transform(t,r){e||(e=await i());try{const i=e.decompressStream(t,s);s=!1,i.buf.length>0&&r.enqueue(i.buf)}catch(t){r.error(Error("Zstd decompression failed: "+t))}},flush(t){s=!0,t.terminate()}});this.readable=r,this.writable=h}}async function c(t,i){const e=await i(),s=t instanceof ArrayBuffer?new Uint8Array(t):t;return e.decompressStream(s,!0).buf}async function a(t,i,e=!1){const s=await i(),r=t instanceof ArrayBuffer?new Uint8Array(t):t;return s.decompressStream(r,e)}async function o(t,i,e){const s=await i(),r=t instanceof ArrayBuffer?new Uint8Array(t):t;return s.decompressSync(r,e)}var u=!1;async function y(){const t=await new Response(new Blob([Uint8Array.fromBase64(H)]).stream().pipeThrough(new w("deflate-raw"))).arrayBuffer();return s=await WebAssembly.compile(t),u=!0,s}async function f(){const t=u?s:await y(),i=new r({maxSrcSize:33554432,maxDstSize:134217728});return await i.init(t),i}class w extends h{constructor(t){super(t,f)}}var O=t=>c(t,f),d=(t,i=!1)=>a(t,f,i),l=(t,i)=>o(t,f,i),H="";export{l as decompressSync,d as decompressStream,O as decompress,r as ZstdDecoder,w as DecompressionStream};